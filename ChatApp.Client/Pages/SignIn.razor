@page "/signin"

@using ChatApp.Blazor.Data;
@using ChatApp.Blazor.Services.Interfaces;

@inherits OwningComponentBase
@inject IAccountService AccountService

<h3>Sign In</h3>

<EditForm Model="@signInModel" OnValidSubmit="SignInAsync">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="userName">User Name</label>
        <InputText id="userName" class="form-control" @bind-Value="signInModel.UserName" />
        <ValidationMessage For="@(() => signInModel.UserName)" />
    </div>

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="signInModel.Email" />
        <ValidationMessage For="@(() => signInModel.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" class="form-control" @bind-Value="signInModel.Password" />
        <ValidationMessage For="@(() => signInModel.Password)" />
    </div>

    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" class="form-control" @bind-Value="signInModel.ConfirmPassword" />
        <ValidationMessage For="@(() => signInModel.ConfirmPassword)" />
    </div>

    <button type="submit" class="btn btn-primary">Sign In</button>
</EditForm>

@code {
    private SignInModel signInModel = new SignInModel();

    private async Task SignInAsync()
    {
        await AccountService.SignIn(signInModel);
        // Handle successful sign in
    }
}