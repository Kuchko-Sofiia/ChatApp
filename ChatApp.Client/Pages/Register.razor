@page "/register"
@using System.ComponentModel.DataAnnotations;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime

<h1>Register</h1>

<EditForm Model="@registerModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" class="form-control" @bind-Value="@registerModel.UserName" />
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="@registerModel.Email" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" class="form-control" @bind-Value="@registerModel.Password" type="password" />
    </div>
@*    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" class="form-control" @bind-Value="@registerModel.ConfirmPassword" type="password" />
    </div>*@
    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private RegisterModel registerModel = new RegisterModel();

    private async Task HandleValidSubmit()
    {
        var result = await httpClient.PostAsJsonAsync("https://localhost:7158/Account/register", registerModel);
        if (result.IsSuccessStatusCode)
        {
            var token = await result.Content.ReadAsStringAsync();
            await jsRuntime.InvokeVoidAsync("localStorage.setItem", "authToken", token);
            navigationManager.NavigateTo("/");
        }
    }

    public class LoginModel
    {
        [Required]
        public string UserName { get; set; }

        [Required]
        public string Email { get; set; }

        [Required]
        public string Password { get; set; }
    }

    public class RegisterModel
    {
        [Required]
        public string UserName { get; set; }

        [Required]
        public string Email { get; set; }

        [Required]
        public string Password { get; set; }

        //[Compare(nameof(Password), ErrorMessage = "The passwords do not match.")]
        //public string ConfirmPassword { get; set; }
    }
}
