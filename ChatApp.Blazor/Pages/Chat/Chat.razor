@page "/chats/chat"
@using System.Net.Http.Json
@using ChatApp.DTO;
@using ChatApp.Blazor.Services.Interfaces;
@using Microsoft.AspNetCore.WebUtilities;
@inject NavigationManager NavigationManager
@inject IChatService ChatService

<div class="d-flex flex-grow-1 flex-row">
    <MudPaper Elevation="25" Class="py-4 flex-grow-1">
        <MudToolBar Dense="true">
            @if (string.IsNullOrEmpty(_chat.Name))
            {
                <MudIcon Icon="@Icons.Material.Outlined.Person" Style="margin-right:10px"></MudIcon>
                <MudText Typo="Typo.h6">chat</MudText>
            }
            else
            {
                <MudIcon Icon="@Icons.Material.Outlined.ChatBubble" Style="margin-right:10px"></MudIcon>
                <MudText Typo="Typo.h6">@_chat.Name</MudText>
            }
        </MudToolBar>
        <div class="d-flex flex-column px-4" style="max-height:65vh;min-height:65vh; overflow:scroll;" id="chatContainer">
            @foreach (var message in _messages)
            {
                <div class="d-flex flex-row my-4">
                    <div class="mr-4">
                        <MudAvatar Color="Color.Primary" Style="height:50px; width:50px;">@message.FromUserId</MudAvatar>
                    </div>
                    <div>
                        <MudText Typo="Typo.body1">@message.FromUserId</MudText>
                        <MudText Typo="Typo.caption" Style="font-size: xx-small!important;">@message.SentTime.ToString("dd MMM, yyyy hh:mm tt")</MudText>
                        <MudText Typo="Typo.body2" Style=" padding: 15px;background-color: var(--mud-palette-background-grey);border-radius: 5px;margin-top:5px">@message.Text</MudText>
                    </div>
                </div>
            }
        </div>
        <MudPaper Elevation="25" Class="d-flex flex-row px-2 mx-4" Style="">
            <MudTextField T="string" Placeholder="Enter your message..." DisableUnderLine="true" Class="mt-n2 mx-4"
                          @bind-Value="_currentMessage.Text" For="@(()=> _currentMessage.Text)" />
            <MudButton OnClick="SubmitAsync" StartIcon="@Icons.Material.Outlined.Send" Color="Color.Secondary" ButtonType="ButtonType.Button">Send</MudButton>
        </MudPaper>
    </MudPaper>
    <MudPaper Elevation="25" Class="pa-3 ml-6" MinWidth="350px">
        <MudToolBar Dense="true">
            <MudText Typo="Typo.h6">Chat Members</MudText>
        </MudToolBar>
        <div class="d-flex flex-column px-4" style="max-height:70vh;min-height:70vh; overflow:scroll;">
            <MudList Clickable="true">
                @foreach (var user in _chat.MembersId)
                {
                    <MudListItem Class="pa-0 px-2" OnClick="@(() => LoadUserChat(user))">
                        <div class="d-flex flex-row mt-n1 mb-n1">
                            <div class="mr-4">
                                <MudBadge Class="my-2">
                                    @if (user == _chat.Id)
                                    {
                                        <MudAvatar Color="Color.Secondary" Style="height:50px; width:50px;">
                                            @user
                                        </MudAvatar>
                                    }
                                    else
                                    {
                                        <MudAvatar Color="Color.Dark" Style="height:50px; width:50px;">@user</MudAvatar>
                                    }
                                </MudBadge>
                            </div>
                            <div>
                                <MudText Typo="Typo.body2" Class="mt-3 mb-n2">@user</MudText>
                                <MudText Typo="Typo.caption" Style="font-size: xx-small!important;">@user</MudText>
                            </div>
                        </div>
                    </MudListItem>
                }
            </MudList>
        </div>
    </MudPaper>
</div>


@code {
    private List<MessageDTO> _messages = new List<MessageDTO>()
    {
        new MessageDTO()
        {
            Text = "Hello",
            FromUserId = "User",
            ToUserId = "User",
            ChatId = 1
        },
        new MessageDTO()
        {
            Text = "Hello",
            FromUserId = "User",
            ToUserId = "User",
            ChatId = 1
        },
        new MessageDTO()
        {
            Text = "Hello",
            FromUserId = "User",
            ToUserId = "User",
            ChatId = 1
        },
        new MessageDTO()
        {
            Text = "Hello",
            FromUserId = "User",
            ToUserId = "User",
            ChatId = 1
        },
        new MessageDTO()
        {
            Text = "Hello",
            FromUserId = "User",
            ToUserId = "User",
            ChatId = 1
        },
    };
    private MessageDTO _currentMessage = new MessageDTO()
    {
            Text = "",
            FromUserId = "User",
            ToUserId = "User",
            ChatId = 1        
    };
    private ChatDTO? _chat = new ChatDTO()
    {
        Id = "3",
        Name = "IChat"
    };

    private void SubmitAsync()
    {

    }
    private void LoadUserChat(string id)
    {
        
    }
}
