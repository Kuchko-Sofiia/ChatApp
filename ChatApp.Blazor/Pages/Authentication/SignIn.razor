@page "/signin"
@using ChatApp.DTO.Authentication;
@using ChatApp.Blazor.Services.Interfaces;

@inject IAccountService AccountService
@inject NavigationManager NavigationManager

<h3>Sign In</h3>
<hr />

<EditForm Model="@signInDto" OnValidSubmit="SignInAsync">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group" style="margin-bottom: 15px">
        <label for="userName">User Name</label>
        <InputText id="userName" class="form-control" @bind-Value="signInDto.UserName" />
        <ValidationMessage For="@(() => signInDto.UserName)" />
    </div>

    <div class="form-group" style="margin-bottom: 15px">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="signInDto.Email" />
        <ValidationMessage For="@(() => signInDto.Email)" />
    </div>

    <div class="form-group" style="margin-bottom: 15px">
        <label for="password">Password</label>
        <InputText type="password" id="password" class="form-control" @bind-Value="signInDto.Password" />
        <ValidationMessage For="@(() => signInDto.Password)" />
    </div>

    <div class="form-group" style="margin-bottom: 15px">
        <label for="confirmPassword">Confirm Password</label>
        <InputText type="password"  id="confirmPassword" class="form-control" @bind-Value="signInDto.ConfirmPassword" />
        <ValidationMessage For="@(() => signInDto.ConfirmPassword)" />
    </div>

    <button type="submit" class="btn btn-primary">Sign In</button>
</EditForm>

@code {
    private SignInDTO signInDto = new SignInDTO();

    private async Task SignInAsync()
    {
        await AccountService.SignIn(signInDto);
        NavigationManager.NavigateTo("/login");
    }
}