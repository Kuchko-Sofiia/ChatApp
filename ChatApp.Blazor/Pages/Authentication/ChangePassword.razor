@page "/changepassword"

@using ChatApp.Blazor.Services.Interfaces;
@using ChatApp.Blazor.Data.Authentication;

@inherits OwningComponentBase
@inject IAccountService AccountService

<h3>Change Password</h3>
<hr />

<EditForm Model="@changePasswordDto" OnValidSubmit="ChangePasswordAsync">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group" style="margin-bottom: 15px">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="changePasswordDto.Email" />
        <ValidationMessage For="@(() => changePasswordDto.Email)" />
    </div>

    <div class="form-group" style="margin-bottom: 15px">
        <label for="currentPassword">Current Password</label>
        <InputText type="password"  id="currentPassword" class="form-control" @bind-Value="changePasswordDto.CurrentPassword" />
        <ValidationMessage For="@(() => changePasswordDto.CurrentPassword)" />
    </div>

    <div class="form-group" style="margin-bottom: 15px">
        <label for="newPassword">New Password</label>
        <InputText type="password" id="newPassword" class="form-control" @bind-Value="changePasswordDto.NewPassword" />
        <ValidationMessage For="@(() => changePasswordDto.NewPassword)" />
    </div>

    <button type="submit" class="btn btn-primary">Change Password</button>
</EditForm>

@code {
    private ChangePasswordDTO changePasswordDto = new ChangePasswordDTO();

    private async Task ChangePasswordAsync()
    {
        await AccountService.ChangePassword(changePasswordDto);
        // Handle successful password change
    }
}